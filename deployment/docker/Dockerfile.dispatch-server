# Multi-stage build for dispatch server
FROM ubuntu:22.04 AS builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
    cmake \
    build-essential \
    libssl-dev \
    zlib1g-dev \
    libcurl4-openssl-dev \
    pkg-config \
    uuid-dev \
    git \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy source code
COPY dispatch_server_cpp/ ./dispatch_server_cpp/
COPY third_party/ ./third_party/

# Build the application
WORKDIR /app/dispatch_server_cpp
RUN cmake -B build -DCMAKE_BUILD_TYPE=Release \
    && cmake --build build --config Release -j$(nproc)

# Runtime stage
FROM ubuntu:22.04

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    libssl3 \
    zlib1g \
    libcurl4 \
    uuid-runtime \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN useradd -r -s /bin/false -U dispatch

# Create application directory
RUN mkdir -p /app/data /app/logs \
    && chown -R dispatch:dispatch /app

# Copy built application
COPY --from=builder /app/dispatch_server_cpp/build/dispatch_server_app /app/
COPY --from=builder /app/dispatch_server_cpp/build/dispatch_server_modern /app/

# Copy configuration and documentation
COPY docs/ /app/docs/
COPY README.md /app/

# Set proper permissions
RUN chmod +x /app/dispatch_server_app /app/dispatch_server_modern \
    && chown -R dispatch:dispatch /app

# Switch to non-root user
USER dispatch
WORKDIR /app

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/ || exit 1

# Default command
CMD ["./dispatch_server_app"]